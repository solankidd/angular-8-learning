how to create project:
1.

1. What happens behind the scenes
- how it detects what to load?
  - indexx.html is served by server
    - there is app-root tag
    - cli created app components
    - check app.component file
  - now at time of serve, cli will inject required javascript bundles
    -  these script contains our custom code as well

  - go to main.ts file
conclusion:
  1. cli inject javascript files into indexx file.
  2. first it will go to main.ts file (which is listed in angular.json file)
  3. where it will find bootstrap module (which is app.module)
  4. now app.module have bootstrap array which tell start with app.component
  5. app component have all the information about where to render


2. component
  - app component is root component
  - now go to serve component
  - now we need to register this new component to app.module
  - add it to declarations, so angular could know about component
  - generate compo: ng generate component servers
  - generate compo: ng g c servers
  - in component // required template / templateUrl
  - for parameter template: template: `html`
  - for parameter style: style: [`
    h3{
      color: blue
    }
  `]
  - for selector: 'app-servers' it is like css selector
  - for selector: '[app-servers]' it will select as attribute
  - for selector: '.app-servers' it will select as class
  - for selector: '#app-servers' it will select as id

  - for property binding in html = []
    - <p [innerText]="allowNewServer"></p>
  - for event binding ()
    - <button class="btn btn-primary" [disabled]="!allowNewServer" (click)="onCreateServer()">Add Server</button>
  - when any event is binned, you can pass $event as parameter, which is reserved for angular

  - *ngif is structural directive means it changes the structure of dom, * denotes that it is structural
  - for else condition you can check servers.component.html file

  -ngClass is similar to ngIf

  -*ngFor is also structural directive
  - <app-server *ngFor="let server of servers"></app-server>


